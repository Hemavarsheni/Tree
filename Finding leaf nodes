class Node:
    def __init__(self,key):
        self.data=key
        self.left=None
        self.right=None 
    def finding_leaf_nodes_iterative(self):
        queue=[] 
        queue.append(self)
        while(len(queue)>0):
            if(queue[0].left==None and queue[0].right==None):
                print(queue[0].data,end=" ")
            else:
                if(queue[0].left!=None):
                    queue.append(queue[0].left)
                if(queue[0].right!=None):
                    queue.append(queue[0].right)
            queue.pop(0)
            
    def finding_leaf_nodes_recursive(self):
        if(self.left==None and self.right==None):
                print(self.data,end=" ")
        else:
            if(self.left!=None):
                self.left.finding_leaf_nodes_recursive()
            if(self.right!=None):
                self.right.finding_leaf_nodes_recursive()
root=Node(1)
root.left=Node(2)
root.right=Node(3)
root.left.left=Node(4)
root.left.right=Node(5)
root.right.left=Node(6)
root.right.left.right=Node(9)
root.right.left.right.left=Node(10)
root.left.left.left=Node(7)
root.left.left.left.right=Node(8) 
root.left.left.left.right.left=Node(21)
root.left.left.left.right.right=Node(22)
root.finding_leaf_nodes_iterative()
print("")
root.finding_leaf_nodes_recursive()
