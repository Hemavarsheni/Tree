class Node:
    def __init__(self,key):
        self.data=key
        self.left=None
        self.right=None 
    def inorder(self):
        queue=[]
        queue.append(self)
        t=self
        while(len(queue)>0):
            if(t!=None):
                if(t.left!=None):
                    queue.append(t.left)
                t=t.left 
            else:
                i=len(queue)-1
                print(queue[i].data,end=" ")
                if(queue[i].right!=None):
                    queue.append(queue[i].right)
                t=queue[i].right 
                queue.pop(i) 
    def preorder(self):
        queue=[]
        queue.append(self)
        t=self 
        while(len(queue)>0):
            if(t!=None):
                print(t.data,end=" ")
                if(t.left!=None):
                    queue.append(t.left)
                t=t.left 
            else:
                i=len(queue)-1 
                if(queue[i].right!=None):
                    queue.append(queue[i].right)
                t=queue[i].right 
                queue.pop(i) 
    def postorder(self):
        queue1=[]
        queue2=[]
        queue1.append(self)
        t=self 
        while(len(queue1)>0):
            if(t!=None):
                queue2.append(t.data)
                if(t.right!=None):
                    queue1.append(t.right)
                t=t.right
            else:
                i=len(queue1)-1 
                if(queue1[i].left!=None):
                    queue1.append(queue1[i].left) 
                t=queue1[i].left
                queue1.pop(i)
        queue2.reverse()
        print(*queue2) 
                
root=Node(1)
root.left=Node(2)
root.right=Node(3)
root.left.left=Node(4)
root.left.right=Node(5)
root.right.left=Node(6)
root.right.left.right=Node(9)
root.right.left.right.left=Node(10)
root.left.left.left=Node(7)
root.left.left.left.right=Node(8)
root.inorder()
print("")
root.preorder()
print("")
root.postorder()
