class Node:
    def __init__(self,key):
        self.data=key
        self.left=None
        self.right=None 
    def number_of_leaf_nodes_iterative(self):
        l=[]
        l.append(self)
        count=0 
        while(len(l)>0):
            t=[]
            for  i in l:
                if(i.left==None and i.right==None):
                    count=count+1 
                else:
                    if(i.left!=None):
                        t.append(i.left)
                    if(i.right!=None):
                        t.append(i.right) 
            l=t
        return count
    def number_of_leaf_nodes_recursive(self):
        def number_of_leaf_nodes_recursive(self):
        if(self.left==None and self.right==None):
            return 1 
        else:
            if(self.left!=None and self.right!=None):
                return (self.left.number_of_leaf_nodes_recursive()+self.right.number_of_leaf_nodes_recursive())
            elif(self.left!=None):
                return self.left.number_of_leaf_nodes_recursive()
            else:
                return self.right.number_of_leaf_nodes_recursive()
root=Node(1)
root.left=Node(2)
root.right=Node(3)
root.left.left=Node(4)
root.left.right=Node(5)
root.right.left=Node(6)
root.right.left.right=Node(9)
root.right.left.right.left=Node(10)
root.left.left.left=Node(7)
root.left.left.left.right=Node(8) 
root.left.left.left.right.left=Node(21)
root.left.left.left.right.right=Node(22)
print(root.number_of_leaf_nodes_recursive())
print(root.number_of_leaf_nodes_iterative())
